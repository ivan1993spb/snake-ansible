---

- hosts: all
  become: True

  vars:
    systemd_unit_directory: {
      "Debian": "/lib/systemd/system",
      "Ubuntu": "/lib/systemd/system",
      "CentOS": "/usr/lib/systemd/system",
    }

  tasks:

    - name: Add a snake user
      user:
        name: "{{ snake_user }}"
        create_home: no
        system: yes

    - name: Create a temp directory
      tempfile:
        state: directory
        prefix: snake
      register: tempfile_result

    - name: Download and unarchive the Snake-Server binary
      unarchive:
        src: "{{ snake_archive_url }}"
        dest: "{{ tempfile_result.path }}"
        remote_src: yes
        list_files: yes
      register: unarchive_result

    - name: "Unzipped files in {{ tempfile_result.path }}"
      debug:
        var: unarchive_result.files

    - name: Copy the Snake-Server's binary
      command: "cp {{ tempfile_result.path }}/{{ unarchive_result.files | first }} {{ snake_install_path }}/{{ snake_binary_name }}"

    - name: Set up proper mode for the binary file
      file:
        name: "{{ snake_install_path }}/{{ snake_binary_name }}"
        state: file
        mode: 0755

    - name: Create systemd unit file for the Snake-Server
      template:
        src: snake-server.service.j2
        dest: "{{ systemd_unit_directory[ansible_distribution] }}/{{ snake_systemd_service_name }}.service"
        mode: 0644

    - name: Enable and start (restart) the Snake-Server systemd service
      service:
        name: "{{ snake_systemd_service_name }}"
        state: restarted
        daemon_reload: yes
        enabled: yes
